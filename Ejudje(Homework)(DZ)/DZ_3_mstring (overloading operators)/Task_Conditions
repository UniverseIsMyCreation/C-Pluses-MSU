mstring (перегрузка операций)

Для уже созданного в задании DZ-2 класса mString перегрузить следующие символы стандартных операций:

операция "+" - соединение двух строк
операция "*" - умножение на константу n (n ≥ 0)- повторение слова n раз (необходимо предусмотреть варианты умножения константы на строку и строки на константу; примеры: "web" * 3 = "webwebweb", 2 * "cat" = "catcat")
операция "=" - выполняет присваивание одной строки другой ( с соответствующим изменением длины строки)
операция ">" - возвращает true, если первая строка лексикографически больше второй строки и false иначе.
операция "<" - возвращает true, если первая строка лексикографически меньше второй строки и false иначе.
операция ">=" - возвращает true, если первая строка лексикографически не меньше второй строки и false иначе.
операция "<=" - возвращает true, если первая строка лексикографически не больше второй строки и false иначе.
операция "==" - возвращает true, если первая строка лексикографически равна второй строке и false иначе.
операция "[ ]" - возвращает символ с заданным номером, нумерация с нуля
операция "<<" - операция вставки в выходной поток.
операция ">>" - операция считывания из входного потока. Строка считывается до первого символа '\n' или до EOF, в зависимости от того что будет раньше. При этом сам символ '\n' в строку не добавляется, но из входного потока удаляется.
Все методы должны быть определены вне класса

Examples

Input

Например, должен работать следующий код (Во входящий поток введена строка "bye bye")

int main()
{
        mstring u("Hello"), v("world!"), w(v), z;

        cout << "u+v = " << u+" "+ v << endl;
        if (u == w)
                w = 2*u + w;
        else
                w = u + v*2;
        cout << "w = " << w << endl;
        w[10] = '?';
        cout << "w = " << w << endl;
        cin >> z;
        cout << "z = " << z << endl;
        return 0;
}

Output

u+v = Hello world!
w = Helloworld!world!
w = Helloworld?world!
z = bye bye
