класс mstring

Требуется написать класс mstring для организации работы со строками.

Описание класса обязательно должно содержать:

конструктор по умолчанию,
конструктор копирования,
конструктор преобразования из строки в стиле языка Си (const char *),
деструктор.
Класс должен обладать следующими методами:(прототипы смотрите ниже)

length() - Определение длины строки,
isempty() - Определение пуста строка или нет, (возвращает true если пустая и false иначе)
add() - Добавление символа в конец данной строки,
add() - Добавление строки в конец данной строки,
insert() - Вставка символа в заданную позицию исходной строки (в т.ч. в нулевую позицию, т.е. в начало строки),
insert() Вставка строки в заданную позицию исходной строки (в т.ч. в нулевую позицию, т.е. в начало строки),
del() - Удаление символа, по заданной позиции символа в строке,
del() - Удаление подстроки, по заданной начальной и конечной позиции подстроки в строке,
search() - Поиск подстроки в строке (возвращает позицию начала первого вхождения подстроки в строке или -1 если такой подстроки нет),
replace() - Замена подстроки (первого вхождения) в строке на заданную строку, если такой подстроки в строке нет, то строку не менять.
print() - Печать строки на экран.
В пунктах 3 и 4, 5 и 6, а также 7 и 8 как можно было догадаться нужно использовать перегрузку функций.

Все методы должны быть определены вне класса

Обработку внештатных ситуаций (например, невозможно выделить память, выход за пределы диапазона) в этом задании не делать.

Input format

Прототипы методов:

int length()
bool isempty()
void add(char c), с - символ
void add(const char* c), с - строка
void insert(char c,int i), с - символ, i - позиция
void insert(const char* c,int i), с - строка, i - позиция
void del(int i), i - позиция
void del(int i, int j), i, j - позиции задающие диапазон удаления с i по j включительно
int search(const char* str),
void replace(const char* sub_str, const char *new_str) замена подстроки sub_str на new_str,
void print().
Нумерация символов всегда начинается с 0.

Output format

обычный вывод для строки, в конце вывода добавлять перевод строки

Examples

Input

Например, вместе с описанием класса должен работать следующий код:
int main()
{
        mstring s ("hello world");
        mstring s1 = s;
        mstring s2;
        cout << s.length() << endl;
        if (s2.isempty())
        {
          s.add('!');
          s2.add("HI!");
          s.print();
          s2.print();
        }
        if (!s1.isempty())
        {
           s1.insert(' ',5);
           s1.insert('m',6);
           s1.insert('y',7);
           s.insert(" my",5);
           s.print();
           s1.print();
        }
        s.del(9);
        s1.del(5,7);
        s.print();
        s1.print();
        return 0;
}

Output

11
hello world!
HI!
hello my world!
hello my world
hello my orld!
hello world*/