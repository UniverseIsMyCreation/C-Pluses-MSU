Футболисты

Описать класс Player (футболист). Для создания объектов этого класса необходимо задать номер игрока(футболиста) (любое целое от 1) и название команды (Zenit или CSKA). При задании некорректного номера или команды должно возникать исключение. Запрещается создавать в какой-либо команде более 11 игроков - в этой ситуации также должно возникать исключение. В одной команде не могут быть игроки с одинаковыми номерами - в этой ситуации опять-таки нужно кинуть исключение. Глобальными переменными, не являющимися объектами типа Player, пользоваться запрещается.

Класс должен обладать следующими методами:

void Print() - печать название команды, в которой играет футболист и его номера в этой команде
void Print_teams() - печать для всех команд: название команды и текущий состав номеров футболистов в команде. То есть нужно напечатать номера и имена объектов класса Player, которые существуют на момент вызова метода
Исключения оформить используя специально созданный класс или иерархию классов.

Вместе с описанием класса Player обзятельно должна быть функция main() следующего вида.

int main()

{

try

{

test_players();

}

catch( ) { ... }

...

return 0;

}

В функции main() catch один или несколько описать самостоятельно.

Output format

Формат вывода метода Print(): %s %d \n (название команды и номер футболиста)
Формат вывода метода Print_teams(): %s: %d %d ... \n (название команды, далее через пробел номера игроков в порядке их появления объектов в программе. Если все футболисты из одной команды, то печатается одна строчка, если есть игроки из двух команд печатается строка (%s: %d %d ... ) для каждой команды )
Вывод функций Print() и Print_teams() должны осуществляться в stdout

В catch блоке должна выводится в stderr строчка следующего вида: Exception: %s in team %s [Error number: %d],

где первый %s сообщение, второй %s имя команды, %d номер футболиста из-за которого возникла ошибка

Если исключение произошло из-за некорректного номера, то сообщение - "Wrong number"
Если исключение произошло из-за игроков с одинаковыми номерами, то сообщение - "Double number"
Если исключение произошло из-за превышения количества игроков, то сообщение - "Too many players" и в этом случае "Error number: %d" НЕ выводится
Если исключение произошло из-за некорректного названия команды, то сообщение - "Wrong name" и в этом случае "Error number: %d" НЕ выводится
Если исключение произошло из-за некорректности нескольких данных (например, неверное название команды и неверный номер игрока), то приоритет устанавливается согласно порядку вывода строчки об ошибке, то есть название команды должно выводится раньше номера игрока, следовательно, если и то и то неверно, то считаем, что исключение произошло из-за некорректного имени команды

Еще раз: вывод сообщений в catch блоке осуществляется в stderr

Examples

Input

void test_players()
{
        Player pl1("Zenit", 10);
        Player pl2("Zenit", 11);
        Player pl3("CSKA", 23);
        Player pl4("CSKA", 10);
        Player pl5("Zenit", 4);
        Player pl6("Zenit", 1);
        Player pl7("CSKA", 7);
        Player pl8("Zenit", 8);

        pl1.Print();
        pl3.Print();
        Player::Print_teams();
}

Output

Zenit 10
CSKA 23
Zenit: 10 11 4 1 8
CSKA: 23 10 7

Input

void test_players()
{
        Player pl1("Zenit", 10);
        Player pl2("Zenit", 11);
        Player pl3("CSKA", 23);
        Player pl4("CSKA", 10);
        Player pl5("Zenit", 4);
        Player pl6("Zenit", 1);
        Player pl7("CSKA", 7);
        Player pl8("Zenit", 4);

        pl1.Print();
        pl3.Print();
        Player::Print_teams();
}

Output

Exception: Double number in team Zenit Error number: 4
