N-мерный вектор (перегрузка операций)

Продолжение задания N-мерный вектор.

В уже реализованном классе Vec необходимо перегрузить следующие операции:

операцию + сложения двух векторов,
операцию - вычитания двух векторов,
операцию * умножение вектора на действительное число,
операцию = присваивание значений одного вектора другому вектору,
операцию == проверки векторов на равенство,
операцию [ ] индексации элементов вектора,
операцию << вставка в выходной поток.
Сделать описания методов класса отдельно от описания класса.

Складывать векторы с разным количеством координат нельзя, поэтому в этом задании можно считать, что сложение векторов выполняется всегда для векторов с одинаковым количеством координат. Остальные операции (присваивание и сравнение векторов на равенство) можно выполнять для векторов произвольной размерности.

Output format

Вывод координат вектора осуществлять в формате (%lf,%lf,...,%lf,%lf) При выводе вещественных чисел лишних нулей не выводить.

Examples

Input

Например, вместе с описанием класса должен работать следующий код:

int main()
{
        double y1[4] = {1,2,3,4};
        double y2[4] = {-2,1,3,-3};

        Vec u(4, y1), v(4, y2);
        Vec w(4);

        cout << "u = " << u << endl;
        cout << "v = " << v << endl;
        w = u = u;
        cout << "w = u = " << w << endl;
        w = 4.*u + v*3;
        cout << "w = 4.*u + v*3 = " << w << endl;
        w[2] = 3;
        w[0] = -1;
        cout << "w = " << w << endl;

        return 0;
}

Output

u = (1,2,3,4)
v = (-2,1,3,-3)
w = u = (1,2,3,4)
w = 4.*u + v*3 = (-2,11,21,7)
w = (-1,11,3,7)
