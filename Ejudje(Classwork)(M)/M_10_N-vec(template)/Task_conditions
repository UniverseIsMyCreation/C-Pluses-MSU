N-мерный вектор (шаблон)

Последние задание на N мерный вектор.

Требуется реализовать шаблонный класс Vec <class T_Type> Хранить указатель на массив заданного типа и длину. Память выделять, используя new.

Должны быть реализованны следующие конструкторы:

конструктор с двумя параметрами (длина вектора и указатель на массив со значениями для инициализации координат вектора)
конструктор с одним параметром (только длина вектора, координаты вектора в этом случае равны нулю)
конструктор копирования,
деструктор.
методы:

set(T arg, int coord) - присваивает координате c номером coord значение arg;
get(int coord) - возвращает значения компоненты c номером coord;
max_norm() - макс-норма (максимум по модулям компонент вектора);
Должны быть перегруженны следующие операции (добавил две новые!)

операцию + сложения двух векторов,
операцию * умножение вектора на действительное число,
операцию ^ скалярного умножения двух векторов,
операцию = присваивание значений одного вектора другому вектору,
операцию += прибавления значений одного вектора другому вектору,
операцию == проверки векторов на равенство,
операцию [ ] индексации элементов вектора,
операцию << вставка в выходной поток.
Описание всех конструкторов, методов set, get, max_norm, всех операций сделать вне описания класса.

Номер координаты в векторе начинается с нуля

Обработку ошибок осуществлять бросая исключения. Для обработки ошибок создать класс или иерархию классов.

Вместе с описанием класса (или классов) обзятельно должна быть функция main() следующего вида.

int main()

{

try

{

Vector();

}

catch( ) { ... }

...

return 0;

}

В функции main() catch один или несколько описать самостоятельно.

Output format

Вывод координат вектора осуществлять в формате (координата 1,координата 2,...,координата N), где каждая координата вектора соответствующего типа.

Если ошибка в конструкторе, (некорректная длина) то вывод: Exception: length error
Если ошибка в методе get(), (некорректная координата) то длина: Exception: coordinate error in get()
Если ошибка в методе set(), (некорректная координата) то длина: Exception: coordinate error in set()
Если ошибка при сложении вектров, то выводить Exception: addition of vectors of different lengths: %d %d где %d %d длина первого и второго вектора
Если ошибка при умножении вектров, то выводить Exception: multiplication of vectors of different lengths: %d %d где %d %d длина первого и второго вектора
Если ошибка в координате вектора, то выводить Exception: incorrect indexing: %d где %d некорректный индекс.
Если любая другая ошибка, то вывод: Exception: unknown error
Вывод сообщений об ошибках нужно осуществлять в stderr, любой другой вывод в stdout

Examples

Input

void Vector()
{
        int w1[3] = {1,2,3};
        int w2[3] = {2,3,1};

        Vec <int> v1(3, w1), v2(3, w2), v3(3);
        cout << "v1 = " << v1 << endl;
        cout << "v2 = " << v2 << endl;
        v3 = 2*v1 + v2*3;
        cout << "v3 = " << v3 << endl;
        int pr = v1^v2;
        cout << "v1^v2 = " << pr << endl;
        v1[1] = 7;
        cout << "v[1] = " << v1[1] << endl;

}

Output

v1 = (1,2,3)
v2 = (2,3,1)
v3 = (8,13,9)
v1^v2 = 11
v[1] = 7

Input

void Vector()
{
      double wd[3] = {1.5,2.3,-1.7};
      double wd2[4] = {1.1,2.3,4.5,6.7};
      Vec<double>  vd1(3, wd), vd2(4, wd2);
      vd2 += vd1;
      cout << "vd1 = " << vd1 << endl;
      cout << "vd2 = " << vd2 << endl;
      double prd = vd1^vd2;
      cout << "vd1^vd2 = " << prd << endl;
      vd2 = vd1 = vd1;
      cout << "vd2 = " << vd2 << endl;
}

Output

Exception: addition of vectors of different lengths: 4 3
