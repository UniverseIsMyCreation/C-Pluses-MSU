N-мерный вектор

Реализовать класс N-мерный вектор Vec:

компоненты вектора хранить в double *v, длину - в int len; Память выделять, используя new.

Класс обязательно должен содержать:

конструктор с двумя параметрами (длина вектора и указатель на массив со значениями для инициализации координат вектора)
конструктор с одним параметром (только длина вектора, координаты вектора в этом случае равны нулю)
конструктор копирования,
деструктор.
методы:

set(double arg, int coord) - присваивает координате c номером coord значение arg;
get(int coord) - возвращает значения компоненты c номером coord;
euc_norm() - евклидова норма (корень из суммы квадратов компонент);
max_norm() - макс-норма (максимум по модулям компонент вектора);
print() - распечатка всех компонент вектора через запятую.
Описание всех конструкторов, методов set, max_norm, euc_norm, print сделать вне описания класса.

Номер координаты в векторе начинается с нуля

В случае некорректных данных в методе set() значение координаты вектора не менять

В случае некорректных данных в методе get() возвращать 0

Output format

Вывод координат вектора осуществлять в формате (%lf,%lf,...,%lf,%lf) При выводе вещественных чисел лишних нулей не выводить.

Examples

Input

Например, вместе с описанием класса должен работать следующий код.

int main(void)
{
    double y1[3] = {1,2,3};
    double y2[5] = {2,1,0,5,7};
    Vec x(3, y1), y(5, y2), z(4);
    Vec u = x;

    y.print();
    x.print();
    z.print();
    u.print();

    x.set(23, 2);  u.set(34, 1);  z.set(-3, 3);
    cout << "x[2] = " << x.get(2) << endl;
    cout << "u[1] = " << u.get(1) << endl;
    cout << "euc_norma y: " << y.euc_norm() << endl;
    cout << "max_norma z: " << z.max_norm() << endl;
    return 0;
}

Output

(2,1,0,5,7)
(1,2,3)
(0,0,0,0)
(1,2,3)
x[2] = 23
u[1] = 34
euc_norma y: 8.88819
max_norma z: 3
